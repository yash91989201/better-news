/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TopRouteImport } from './routes/top'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as NewRouteImport } from './routes/new'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthSubmitRouteImport } from './routes/_auth/submit'

const TopRoute = TopRouteImport.update({
  id: '/top',
  path: '/top',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const NewRoute = NewRouteImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSubmitRoute = AuthSubmitRouteImport.update({
  id: '/submit',
  path: '/submit',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/new': typeof NewRoute
  '/signup': typeof SignupRoute
  '/top': typeof TopRoute
  '/submit': typeof AuthSubmitRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/new': typeof NewRoute
  '/signup': typeof SignupRoute
  '/top': typeof TopRoute
  '/submit': typeof AuthSubmitRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/new': typeof NewRoute
  '/signup': typeof SignupRoute
  '/top': typeof TopRoute
  '/_auth/submit': typeof AuthSubmitRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/new' | '/signup' | '/top' | '/submit'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/new' | '/signup' | '/top' | '/submit'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/login'
    | '/new'
    | '/signup'
    | '/top'
    | '/_auth/submit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
  NewRoute: typeof NewRoute
  SignupRoute: typeof SignupRoute
  TopRoute: typeof TopRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/top': {
      id: '/top'
      path: '/top'
      fullPath: '/top'
      preLoaderRoute: typeof TopRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/new': {
      id: '/new'
      path: '/new'
      fullPath: '/new'
      preLoaderRoute: typeof NewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/submit': {
      id: '/_auth/submit'
      path: '/submit'
      fullPath: '/submit'
      preLoaderRoute: typeof AuthSubmitRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthSubmitRoute: typeof AuthSubmitRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSubmitRoute: AuthSubmitRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
  NewRoute: NewRoute,
  SignupRoute: SignupRoute,
  TopRoute: TopRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
